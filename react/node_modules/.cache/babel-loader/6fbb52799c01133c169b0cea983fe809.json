{"ast":null,"code":"const Reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false\n      };\n\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        isFetching: false,\n        error: true\n      };\n\n    case \"UPDATE_START\":\n      return { ...state,\n        isFetching: true\n      };\n\n    case \"UPDATE_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"UPDATE_FAILURE\":\n      return {\n        user: state.user,\n        isFetching: false,\n        error: true\n      };\n\n    case \"LOGOUT\":\n      return {\n        user: null,\n        isFetching: false,\n        error: false\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = Reducer;\nexport default Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["/Users/byungmoonkim/dev/react-blog/react/src/context/Reducer.js"],"names":["Reducer","state","action","type","user","isFetching","error","payload"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,aAAL;AACI,aAAO;AACHC,QAAAA,IAAI,EAAE,IADH;AAEHC,QAAAA,UAAU,EAAE,IAFT;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAK,eAAL;AACI,aAAO;AACHF,QAAAA,IAAI,EAAEF,MAAM,CAACK,OADV;AAEHF,QAAAA,UAAU,EAAE,KAFT;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAK,eAAL;AACI,aAAO;AACHF,QAAAA,IAAI,EAAE,IADH;AAEHC,QAAAA,UAAU,EAAE,KAFT;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAK,cAAL;AACI,aAAO,EACH,GAAGL,KADA;AAEHI,QAAAA,UAAU,EAAC;AAFR,OAAP;;AAIJ,SAAK,gBAAL;AACI,aAAO;AACHD,QAAAA,IAAI,EAAEF,MAAM,CAACK,OADV;AAEHF,QAAAA,UAAU,EAAE,KAFT;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAK,gBAAL;AACI,aAAO;AACHF,QAAAA,IAAI,EAAEH,KAAK,CAACG,IADT;AAEHC,QAAAA,UAAU,EAAE,KAFT;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAMJ,SAAK,QAAL;AACI,aAAO;AACHF,QAAAA,IAAI,EAAE,IADH;AAEHC,QAAAA,UAAU,EAAE,KAFT;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ;AACI,aAAOL,KAAP;AA5CR;AA8CH,CA/CD;;KAAMD,O;AAiDN,eAAeA,OAAf","sourcesContent":["const Reducer = (state, action) => {\n    switch(action.type){\n        case \"LOGIN_START\":\n            return {\n                user: null,\n                isFetching: true,\n                error: false\n            };\n        case \"LOGIN_SUCCESS\":\n            return {\n                user: action.payload,\n                isFetching: false,\n                error: false\n            };\n        case \"LOGIN_FAILURE\":\n            return {\n                user: null,\n                isFetching: false,   \n                error: true \n            };   \n        case \"UPDATE_START\":\n            return {\n                ...state,\n                isFetching:true\n            };\n        case \"UPDATE_SUCCESS\":\n            return {\n                user: action.payload,\n                isFetching: false,\n                error: false\n            };\n        case \"UPDATE_FAILURE\":\n            return {\n                user: state.user,\n                isFetching: false,   \n                error: true \n            };   \n\n        case \"LOGOUT\":\n            return {\n                user: null,\n                isFetching: false,   \n                error: false \n            };       \n        default:\n            return state; \n    }\n}\n\nexport default Reducer\n\n"]},"metadata":{},"sourceType":"module"}