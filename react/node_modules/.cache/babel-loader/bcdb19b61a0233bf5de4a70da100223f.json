{"ast":null,"code":"var _jsxFileName = \"/Users/byungmoonkim/dev/react-blog/react/src/components/singlePost/SinglePost.js\",\n    _s = $RefreshSig$();\n\nimport { useLocation } from \"react-router\";\nimport { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport \"./singlepost.css\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc\n      }); //window.location.reload();\n\n      setUpdateMode(false);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PF + post.photo,\n        alt: \"\",\n        lassName: \"singlePostImg\",\n        className: \"slgImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"singlePostTitleInput\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: [\" \", desc, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SinglePost, \"3l6Lx2+LCBEUtDHlfzsOc/UYoKo=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/Users/byungmoonkim/dev/react-blog/react/src/components/singlePost/SinglePost.js"],"names":["useLocation","useEffect","useState","useContext","axios","Link","Context","SinglePost","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","err","handleUpdate","put","photo","e","target","value","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["import { useLocation } from \"react-router\"\nimport { useEffect , useState, useContext } from \"react\";\nimport axios from \"axios\"\nimport \"./singlepost.css\"\nimport {Link} from \"react-router-dom\"\nimport { Context } from \"../../context/Context\";\n\nexport default function SinglePost() {\n    const location = useLocation();\n    const path = (location.pathname.split(\"/\")[2]);\n    const [post, setPost] = useState({});\n    const PF = \"http://localhost:5000/images/\"\n    const {user} = useContext(Context);\n    const [ title, setTitle] = useState(\"\");\n    const [desc, setDesc] = useState(\"\");\n    const [updateMode, setUpdateMode] = useState(false);\n\n    useEffect(() => {\n        const getPost = async () => {\n            const res = await axios.get(\"/posts/\" + path);\n            setPost(res.data);\n            setTitle(res.data.title);\n            setDesc(res.data.desc);\n        };\n        getPost();\n    }, [path]);\n\n\n    const handleDelete = async() => {\n        try{\n            await axios.delete(`/posts/${post._id}`, {\n               data: {username: user.username}\n            });\n            window.location.replace(\"/\");\n        } catch(err) {}\n    };\n\n    const handleUpdate = async() => {\n        try{\n            await axios.put(`/posts/${post._id}`, {\n                username: user.username, title, desc\n            });\n            //window.location.reload();\n            setUpdateMode(false);\n        }catch(err){}\n    }\n\n    return (\n        <div className=\"singlePost\">\n            <div className=\"singlePostWrapper\">\n            {post.photo && (\n                <img src={PF + post.photo} alt=\"\" lassName=\"singlePostImg\" className=\"slgImg\" />\n            )}{\n                updateMode ? <input type=\"text\" value={title} className=\"singlePostTitleInput\" autoFocus onChange={(e)=> setTitle(e.target.value)}/> : (\n                    <h1 className=\"singlePostTitle\">\n                        {title}\n                        {post.username === user?.username && (\n\n                            <div className=\"singlePostEdit\">\n                                <i className=\"singlePostIcon far fa-edit\" onClick={() => setUpdateMode(true)}></i>\n                                <i className=\"singlePostIcon far fa-trash-alt\" onClick={handleDelete}></i>\n                            </div>\n                        )}\n                    </h1>\n                )\n            }\n                <div className=\"singlePostInfo\">\n                    <span className=\"singlePostAuthor\">Author: \n                    <Link to={`/?user=${post.username}`} className=\"link\"> \n                        <b>{post.username}</b>\n                    </Link>\n                        </span>\n                    <span className=\"singlePostDate\">{new Date(post.createdAt).toDateString()}</span>\n                </div>\n                {updateMode ? (\n                    <textarea className=\"singlePostDescInput\" value={desc} onChange={(e) => setDesc(e.target.value)}/>\n                    ) : (\n                        <p className=\"singlePostDesc\"> {desc} </p>\n                    )\n                }\n                {updateMode && \n                    <button className=\"singlePostButton\" onClick={handleUpdate}>Update</button>\n                }\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}